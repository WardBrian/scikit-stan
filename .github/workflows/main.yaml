name: sk-stan-learn

on:
  push:
    branches:
      - 'develop'
      - 'main'
    tags:
      - '**'
  pull_request:
  workflow_dispatch:
    inputs:
      cmdstan-version:
        description: 'Version to test'
        required: false
        default: ''

jobs:
  sk-stan-learn:
    name: tests
    runs-on: ${{matrix.os}}
    strategy:
      os: [ubuntu-latest, macos-latest, windows-latest]
      python-version: [3.7, 3.8, 3.9, "3.10"]
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (python)
        run: |
          python -m pip install --upgrade pip wheel
          pip install .[test]

      - name: Run flake8, pylint, mypy
        if: matrix.python-version == '3.10'
        run: |
          flake8 sk_stan_regression test
          pylint -v sk_stan_regression test
          mypy sk_stan_regression

      - name: CmdStan installation cacheing
        uses: actions/cache@v2
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-${{ steps.system-info.outputs.release }}-cmdstan-${{ needs.get-cmdstan-version.outputs.version }}-${{ hashFiles('**/install_cmdstan.py') }}

      - name: Install CmdStan (Linux, macOS)
        if: matrix.os != 'windows-latest'
        run: |
          install_cmdstan -h
          install_cxx_toolchain -h
          python -m cmdstanpy.install_cmdstan --version ${{ needs.get-cmdstan-version.outputs.version }}

      - name: Install CmdStan (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          install_cmdstan -h
          install_cxx_toolchain -h
          python -m cmdstanpy.install_cmdstan --compiler --version ${{ needs.get-cmdstan-version.outputs.version }}

      - name: Run tests
        run: |
          mkdir run_tests
          cd run_tests
          pytest -v ../test --cov=../sk_stan_regression
