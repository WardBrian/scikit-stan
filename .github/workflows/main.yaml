name: scikit-stan tests

on:
  push:
    branches:
      - 'develop'
      - 'main'
    tags:
      - '**'
  pull_request:
  workflow_dispatch: {}


env:
  CMDSTAN_VERSION: "2.34.1"

jobs:
  scikit-stan:
    name: tests
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, "3.10", "3.11"]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out github
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies (python)
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements-test.txt

      - name: Run flake8
        run: |
          flake8 scikit_stan test

      - name: Run mypy
        if: matrix.python-version == '3.10'
        run: |
          mypy scikit_stan

      - name: CmdStan installation cacheing
        uses: actions/cache@v4
        with:
          path: ~/.cmdstan
          key: ${{ runner.os }}-cmdstan-${{ env.CMDSTAN_VERSION }}
          
      - name: Delete precompiled header (MacOS)
        if: matrix.os == 'macos-latest' && steps.cache-cmdstan.outputs.cache-hit == 'true'
        run: rm -f ~/.cmdstan/cmdstan-${{ needs.get-cmdstan-version.outputs.version }}/stan/src/stan/model/*.hpp.gch

      - name: Install CmdStan
        run: |
          python -m cmdstanpy.install_cmdstan --version "${{ env.CMDSTAN_VERSION }}" --cores 4 --verbose

      - name: Install package
        run: |
          pip install .

      - name: Run tests
        run: |
          pytest --runslow -v --cov --cov-report term
